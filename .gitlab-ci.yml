image : node:20
stages: 
  - build
  - test
  - deploy review
  - deploy staging
  - deploy production
  - production tests

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

variables:
  STAGING_DOMAIN: blueberry1-staging.surge.sh
  PRODUCTION_DOMAIN: blueberry1.surge.sh

build website:
  stage: build
  only:
    - main
    - merge_requests
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
     - node_modules/
  script:
    - echo $CI_COMMIT_SHORT_SHA
    - npm install
    - npm install -g gatsby-cli
    - gatsby build
    - sed -i "s/%%VERSION%%/$CI_COMMIT_SHORT_SHA/" ./public/index.html
  artifacts:
    paths:
      - public/

Test artifact:
  image: alpine
  stage: test
  only:
    - main
    - merge_requests
  script:
    - grep -q -i "gatsby" ./public/index.html

Test website:
  stage: test
  only:
    - master
    - merge_requests
  script: 
    - npm install
    - npm install -g gatsby-cli
    - gatsby serve & 
    - sleep 10
    - curl "http://localhost:9000" | grep -i -q "gatsby"

deploy review:
  stage: deploy review
  only:
    - merge_requests
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://blueberry1-$CI_ENVIRONMENT_SLUG.surge.sh
    on_stop: stop review
  script:
    - npm install --global surge
    - surge --project ./public --domain blueberry1-$CI_ENVIRONMENT_SLUG.surge.sh

stop review:
  stage: deploy review
  only:
    - merge_requests
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Steps to remove review app"
    - npm install --global surge
    - surge teardown blueberry1-$CI_ENVIRONMENT_SLUG.surge.sh
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop

.deploy_template: &deploy
  only:
    - main
  script:
    - npm install --global surge
    - surge --project ./public --domain $DOMAIN
  environment:
    name: staging
    url: http://${DOMAIN}


deploy staging: 
  <<: *deploy 
  stage: deploy staging
  variables:
    DOMAIN: ${STAGING_DOMAIN}
  environment:
    name: staging


deploy production:  
  <<: *deploy
  stage: deploy production
  variables: 
    DOMAIN: $PRODUCTION_DOMAIN
  environment:
    name: production
    url: http://$PRODUCTION_DOMAIN
  only:
    - main
  # when: manual
  # allow_failure: false
  before_script:
    - echo "deploying to production"
    - npm install --global surge
  script:
    - surge --project ./public --domain $PRODUCTION_DOMAIN

Deployment tests:  
  image: alpine
  stage: production tests
  only:
    - main
  script:
    - apk add --no-cache curl
    - curl "https://blueberry1.surge.sh/" | grep -i "Tutorial" 
    - curl "https://blueberry1.surge.sh/" | grep -i "$CI_COMMIT_SHORT_SHA" 

  